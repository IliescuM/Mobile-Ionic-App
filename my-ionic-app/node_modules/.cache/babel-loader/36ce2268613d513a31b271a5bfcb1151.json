{"ast":null,"code":"export const baseUrl = 'localhost:3000';\nexport const getLogger = tag => (...args) => {}; //console.log(tag, ...args);}\n\nconst log = getLogger('api');\nexport function withLogs(promise, fnName) {\n  log(`${fnName} - started`);\n  return promise.then(res => {\n    log(`${fnName} - succeeded`);\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    log(`${fnName} - failed`);\n    return Promise.reject(err);\n  });\n}\nexport const config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nexport const authConfig = token => ({\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`\n  }\n});","map":{"version":3,"sources":["G:/Mihnea/Facultate/anu 3/Mobile/start/my-ionic-app/src/core/index.tsx"],"names":["baseUrl","getLogger","tag","args","log","withLogs","promise","fnName","then","res","Promise","resolve","data","catch","err","reject","config","headers","authConfig","token","Authorization"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,gBAAhB;AAEP,OAAO,MAAMC,SAAkD,GAC3DC,GAAG,IAAI,CAAC,GAAGC,IAAJ,KAAa,CAAE,CADnB,C,CACoB;;AAE3B,MAAMC,GAAG,GAAGH,SAAS,CAAC,KAAD,CAArB;AAMA,OAAO,SAASI,QAAT,CAAqBC,OAArB,EAAyDC,MAAzD,EAAqF;AACxFH,EAAAA,GAAG,CAAE,GAAEG,MAAO,YAAX,CAAH;AACA,SAAOD,OAAO,CACTE,IADE,CACGC,GAAG,IAAI;AACTL,IAAAA,GAAG,CAAE,GAAEG,MAAO,cAAX,CAAH;AACA,WAAOG,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACH,GAJE,EAKFC,KALE,CAKIC,GAAG,IAAI;AACVV,IAAAA,GAAG,CAAE,GAAEG,MAAO,WAAX,CAAH;AACA,WAAOG,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACH,GARE,CAAP;AASH;AAED,OAAO,MAAME,MAAM,GAAG;AAClBC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AADS,CAAf;AAMP,OAAO,MAAMC,UAAU,GAAIC,KAAD,KAAqB;AAC3CF,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAELG,IAAAA,aAAa,EAAG,UAASD,KAAM;AAF1B;AADkC,CAArB,CAAnB","sourcesContent":["export const baseUrl = 'localhost:3000';\r\n\r\nexport const getLogger: (tag: string) => (...args: any) => void =\r\n    tag => (...args) => {};//console.log(tag, ...args);}\r\n\r\nconst log = getLogger('api');\r\n\r\nexport interface ResponseProps<T> {\r\n    data: T;\r\n}\r\n\r\nexport function withLogs<T>(promise: Promise<ResponseProps<T>>, fnName: string): Promise<T> {\r\n    log(`${fnName} - started`);\r\n    return promise\r\n        .then(res => {\r\n            log(`${fnName} - succeeded`);\r\n            return Promise.resolve(res.data);\r\n        })\r\n        .catch(err => {\r\n            log(`${fnName} - failed`);\r\n            return Promise.reject(err);\r\n        });\r\n}\r\n\r\nexport const config = {\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n};\r\n\r\nexport const authConfig = (token?: string) => ({\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}