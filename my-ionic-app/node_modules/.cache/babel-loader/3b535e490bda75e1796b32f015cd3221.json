{"ast":null,"code":"import axios from'axios';import{getLogger}from'../core';var log=getLogger('itemApi');var baseUrl='localhost:3000';var itemUrl=\"http://\".concat(baseUrl,\"/item\");function withLogs(promise,fnName){log(\"\".concat(fnName,\" - started\"));return promise.then(function(res){log(\"\".concat(fnName,\" - succeeded\"));return Promise.resolve(res.data);}).catch(function(err){log(\"\".concat(fnName,\" - failed\"));return Promise.reject(err);});}var config={headers:{'Content-Type':'application/json'}};export var getItems=function getItems(){return withLogs(axios.get(itemUrl,config),'getItems');};export var createItem=function createItem(item){return withLogs(axios.post(itemUrl,item,config),'createItem');};export var updateItem=function updateItem(item){return withLogs(axios.put(\"\".concat(itemUrl,\"/\").concat(item.id),item,config),'updateItem');};export var newWebSocket=function newWebSocket(onMessage){var ws=new WebSocket(\"ws://\".concat(baseUrl));ws.onopen=function(){log('web socket onopen');};ws.onclose=function(){log('web socket onclose');};ws.onerror=function(error){log('web socket onerror',error);};ws.onmessage=function(messageEvent){log('web socket onmessage');onMessage(JSON.parse(messageEvent.data));};return function(){ws.close();};};","map":{"version":3,"sources":["G:/Mihnea/Facultate/anu 3/Mobile/start/my-ionic-app/src/class/itemApi.tsx"],"names":["axios","getLogger","log","baseUrl","itemUrl","withLogs","promise","fnName","then","res","Promise","resolve","data","catch","err","reject","config","headers","getItems","get","createItem","item","post","updateItem","put","id","newWebSocket","onMessage","ws","WebSocket","onopen","onclose","onerror","error","onmessage","messageEvent","JSON","parse","close"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,SAA1B,CAGA,GAAMC,CAAAA,GAAG,CAAGD,SAAS,CAAC,SAAD,CAArB,CAEA,GAAME,CAAAA,OAAO,CAAG,gBAAhB,CACA,GAAMC,CAAAA,OAAO,kBAAaD,OAAb,SAAb,CAMA,QAASE,CAAAA,QAAT,CAAqBC,OAArB,CAAyDC,MAAzD,CAAqF,CACnFL,GAAG,WAAIK,MAAJ,eAAH,CACA,MAAOD,CAAAA,OAAO,CACXE,IADI,CACC,SAAAC,GAAG,CAAI,CACXP,GAAG,WAAIK,MAAJ,iBAAH,CACA,MAAOG,CAAAA,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP,CACD,CAJI,EAKJC,KALI,CAKE,SAAAC,GAAG,CAAI,CACZZ,GAAG,WAAIK,MAAJ,cAAH,CACA,MAAOG,CAAAA,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP,CACD,CARI,CAAP,CASD,CAED,GAAME,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CADI,CAAf,CAMA,MAAO,IAAMC,CAAAA,QAAoC,CAAG,QAAvCA,CAAAA,QAAuC,EAAM,CACxD,MAAOb,CAAAA,QAAQ,CAACL,KAAK,CAACmB,GAAN,CAAUf,OAAV,CAAmBY,MAAnB,CAAD,CAA6B,UAA7B,CAAf,CACD,CAFM,CAIP,MAAO,IAAMI,CAAAA,UAAqD,CAAG,QAAxDA,CAAAA,UAAwD,CAAAC,IAAI,CAAI,CAC3E,MAAOhB,CAAAA,QAAQ,CAACL,KAAK,CAACsB,IAAN,CAAWlB,OAAX,CAAoBiB,IAApB,CAA0BL,MAA1B,CAAD,CAAoC,YAApC,CAAf,CACD,CAFM,CAIP,MAAO,IAAMO,CAAAA,UAAqD,CAAG,QAAxDA,CAAAA,UAAwD,CAAAF,IAAI,CAAI,CAC3E,MAAOhB,CAAAA,QAAQ,CAACL,KAAK,CAACwB,GAAN,WAAapB,OAAb,aAAwBiB,IAAI,CAACI,EAA7B,EAAmCJ,IAAnC,CAAyCL,MAAzC,CAAD,CAAmD,YAAnD,CAAf,CACD,CAFM,CAWP,MAAO,IAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,SAAD,CAA4C,CACtE,GAAMC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,SAAJ,gBAAsB1B,OAAtB,EAAX,CACAyB,EAAE,CAACE,MAAH,CAAY,UAAM,CAChB5B,GAAG,CAAC,mBAAD,CAAH,CACD,CAFD,CAGA0B,EAAE,CAACG,OAAH,CAAa,UAAM,CACjB7B,GAAG,CAAC,oBAAD,CAAH,CACD,CAFD,CAGA0B,EAAE,CAACI,OAAH,CAAa,SAAAC,KAAK,CAAI,CACpB/B,GAAG,CAAC,oBAAD,CAAuB+B,KAAvB,CAAH,CACD,CAFD,CAGAL,EAAE,CAACM,SAAH,CAAe,SAAAC,YAAY,CAAI,CAC7BjC,GAAG,CAAC,sBAAD,CAAH,CACAyB,SAAS,CAACS,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACvB,IAAxB,CAAD,CAAT,CACD,CAHD,CAIA,MAAO,WAAM,CACXgB,EAAE,CAACU,KAAH,GACD,CAFD,CAGD,CAlBM","sourcesContent":["import axios from 'axios';\r\nimport { getLogger } from '../core';\r\nimport { ItemProps } from './ItemProps';\r\n\r\nconst log = getLogger('itemApi');\r\n\r\nconst baseUrl = 'localhost:3000';\r\nconst itemUrl = `http://${baseUrl}/item`;\r\n\r\ninterface ResponseProps<T> {\r\n  data: T;\r\n}\r\n\r\nfunction withLogs<T>(promise: Promise<ResponseProps<T>>, fnName: string): Promise<T> {\r\n  log(`${fnName} - started`);\r\n  return promise\r\n    .then(res => {\r\n      log(`${fnName} - succeeded`);\r\n      return Promise.resolve(res.data);\r\n    })\r\n    .catch(err => {\r\n      log(`${fnName} - failed`);\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nexport const getItems: () => Promise<ItemProps[]> = () => {\r\n  return withLogs(axios.get(itemUrl, config), 'getItems');\r\n}\r\n\r\nexport const createItem: (item: ItemProps) => Promise<ItemProps[]> = item => {\r\n  return withLogs(axios.post(itemUrl, item, config), 'createItem');\r\n}\r\n\r\nexport const updateItem: (item: ItemProps) => Promise<ItemProps[]> = item => {\r\n  return withLogs(axios.put(`${itemUrl}/${item.id}`, item, config), 'updateItem');\r\n}\r\n\r\ninterface MessageData {\r\n  event: string;\r\n  payload: {\r\n    item: ItemProps;\r\n  };\r\n}\r\n\r\nexport const newWebSocket = (onMessage: (data: MessageData) => void) => {\r\n  const ws = new WebSocket(`ws://${baseUrl}`)\r\n  ws.onopen = () => {\r\n    log('web socket onopen');\r\n  };\r\n  ws.onclose = () => {\r\n    log('web socket onclose');\r\n  };\r\n  ws.onerror = error => {\r\n    log('web socket onerror', error);\r\n  };\r\n  ws.onmessage = messageEvent => {\r\n    log('web socket onmessage');\r\n    onMessage(JSON.parse(messageEvent.data));\r\n  };\r\n  return () => {\r\n    ws.close();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}